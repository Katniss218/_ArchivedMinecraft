
function attack_speed_to_text(value: number) :: text:
	# returns the text representation of an attack speed modifier.
	if {_value} is smaller than -2.8:
		return "Slow"
	if {_value} is smaller than -1.8:
		return "Normal"
	if {_value} is smaller than -0.8:
		return "Fast"

function create_rpgitem_stack(item_id: text, prefix_id: text, amount: integer) :: item:
	if {_prefix_id} is not set:
		set {_item} to {_amount} of ({rpg::itemdef::%{_item_id}%} parsed as item) with nbt from "{tag:{HideFlags:2147483647,item_id:'%{_item_id}%'}}"
	else:
		set {_item} to {_amount} of ({rpg::itemdef::%{_item_id}%} parsed as item) with nbt from "{tag:{HideFlags:2147483647,item_id:'%{_item_id}%',prefix_id:'%{_prefix_id}%'}}"
	set {_item} to sync_rpgitem({_item})
	return {_item}
	
function append_property(item_id: text, prefix_id: text, property: text, property_name: text, rarity_primary_color: text) :: texts:
	if {rpg::itemdef::%{_item_id}%::%{_property}%} is set:
		set {_base} to {rpg::itemdef::%{_item_id}%::%{_property}%}
		set {_final} to {_base}
		if {rpg::prefixdef::%{_prefix_id}%::%{_property}%} is set:
			# prefixes are percentages.
			set {_final} to round({_final} * (1+{rpg::prefixdef::%{_prefix_id}%::%{_property}%}))
		set {_signcolor} to sign_to_color({_final} - {_base})
		# potentially display a range?
		add "%{_rarity_primary_color}%&l%{_property_name}%&8: %{rpg::signcolor_neutral}%&l%{_base}% &8(%{_signcolor}%&l%{_final}%&8)" to {_lore::*}
		if {rpg::prefixdef::%{_prefix_id}%::%{_property}%} is set:
			add "&8 > %{_signcolor}%%{rpg::prefixdef::%{_prefix_id}%::display_name}%: %number_to_text_with_sign({rpg::prefixdef::%{_prefix_id}%::%{_property}%} * 100)%%%" to {_lore::*}
	return {_lore::*}
	   
	
function sync_rpgitem(item: item) :: item:
	#syncs the item, so its minecraft values (attributes, display, etc) are what they should be.
   
	# name: 'Lv.2 Broken Wooden Sword'
	# lore:
	# - '- This sword is made from wood'
	# - '- This sword has been broken in two'
	# -
	# - 'Damage: 5 (4)'
	#   ' > Broken: -20%
	# - 'Speed: Normal'
   
	set {_item_id} to tag "item_id" of nbt compound of {_item}
	set {_prefix_id} to tag "prefix_id" of nbt compound of {_item}

	set {_item_level} to {rpg::itemdef::%{_item_id}%::item_level}
	
	set {_rarity} to {rpg::itemdef::%{_item_id}%::rarity} + {rpg::prefixdef::%{_prefix_id}%::rarity}
	if {_rarity} is less than 0:
		set {_rarity} to 0
	else if {_rarity} is greater than 7:
		set {_rarity} to 7
		
	set {_item_display_name} to {rpg::itemdef::%{_item_id}%::display_name}
	set {_prefix_display_name} to {rpg::prefixdef::%{_prefix_id}%::display_name}
	set {_rarity_primary_color} to {rpg::raritydef::%{_rarity}%::primary_color}
	set {_rarity_secondary_color} to {rpg::raritydef::%{_rarity}%::secondary_color}

	if {_prefix_id} is not set:
		set {_display::name} to "%formatted_level({_item_level})% %{_rarity_primary_color}%&l%{_item_display_name}%"
	else:
		set {_display::name} to "%formatted_level({_item_level})% %{_rarity_primary_color}%&l%{_prefix_display_name}% %{_item_display_name}%"

	loop {rpg::itemdef::%{_item_id}%::display_description::*}:
		add "%{_rarity_secondary_color}% %loop-value%" to {_display::lore::*}
	
	add "" to {_display::lore::*}

	add append_property({_item_id}, {_prefix_id}, "attack_damage", "Damage", {_rarity_primary_color}) to {_display::lore::*}
	# commented out due to slightly different formatting
	#add append_property({_item_id}, {_prefix_id}, "attack_speed", "Speed", {_rarity_primary_color}) to {_display::lore::*}
	   
	if {rpg::itemdef::%{_item_id}%::attack_speed} is set:
		set {_speed_base} to {rpg::itemdef::%{_item_id}%::attack_speed}
		set {_speed_final} to {_speed_base}
		if {rpg::prefixdef::%{_prefix_id}%::attack_speed} is set:
			# prefixes are percentages.
			set {_speed_final} to round({_speed_final} * (1+{rpg::prefixdef::%{_prefix_id}%::attack_speed}))
		set {_signcolor} to sign_to_color({_speed_final} - {_speed_base})
		# potentially display a range?
		add "%{_rarity_primary_color}%&lSpeed&8: %{rpg::signcolor_neutral}%&l%attack_speed_to_text({_speed_final})% &8(%{_signcolor}%&l%attack_speed_to_text({_speed_final})%&8)" to {_display::lore::*}
		if {rpg::prefixdef::%{_prefix_id}%::attack_speed} is set:
			add "&8 > %{_signcolor}%%{rpg::prefixdef::%{_prefix_id}%::display_name}%: %number_to_text_with_sign({rpg::prefixdef::%{_prefix_id}%::attack_speed} * 100)%%%" to {_display::lore::*}

	add append_property({_item_id}, {_prefix_id}, "food", "Food", {_rarity_primary_color}) to {_display::lore::*}
	
	# analogous for food, and potion effects.
	
	set {_item}'s name to {_display::name}
	set {_item}'s lore to {_display::lore::*}
	return {_item}
