
# Adding things to `variables` clears them when the script is reloaded.

options:
	min_radius: 16

command /rpgspawner <text> [<text>] [<number>]:
	executable by: players
	permission: rpg.spawner
	trigger:
		if arg-1 is "create":
			if arg-2 is not set:
				send "&cspecify mob ID" to player
				stop
			set {_roundLoc} to location(rounded x-coordinate of player + 0.5, rounded y-coordinate of player + 0.5, rounded z-coordinate of player + 0.5, player's world)
			if {rpg::spawners::*} contains {_roundLoc}:
				send "&c%{_roundLoc}% is already a spawner." to player
				stop
			if arg-3 is not set:
				set {_count} to 1
			else:
				set {_count} to arg-3
			add {_roundLoc} to {rpg::spawners::*}
			set {_last} to size of {rpg::spawners::*}
			set {rpg::spawners::%{_last}%::mobId} to arg-2
			set {rpg::spawners::%{_last}%::mobCount} to {_count}
			send "&aAdded a spawner at %{_roundLoc}%." to player
		if arg-1 is "remove":
			if {rpg::spawners::*} contains location of player:
				remove location of player from {rpg::spawners::*}
				send "&aRemoved %location of player% from spawners." to player
		if arg-1 is "removeall":
			clear {rpg::spawners::*}
			send "&aRemoved all spawners." to player
		if arg-1 is "list":
			if {rpg::spawners::*} is empty:
				send "&aNo spawners." to player
				stop
			loop {rpg::spawners::*}:
				send "&a%loop-index%: %loop-value%, %{rpg::spawners::%loop-index%::mobCount}%x %{rpg::spawners::%loop-index%::mobId}%" to player

# Spawn entities at the defined spawners

every 5 seconds:
	loop {rpg::spawners::*}:
		set {_currSmallestDist} to 9999999
		loop all entities in radius {@min_radius} of loop-value-1:
			if loop-entity is a dropped item:
				continue
			if loop-entity is a painting:
				continue
			if loop-entity is an armor stand:
				continue
			if loop-entity is a oak boat:
				continue
			if loop-entity is a spruce boat:
				continue
			if loop-entity is a birch boat:
				continue
			if loop-entity is a jungle boat:
				continue
			if loop-entity is a acacia boat:
				continue
			if loop-entity is a dark oak boat:
				continue
			# count players as preventing spawns so nobody is jumped.
			#if loop-entity is a player:
			#	continue
			set {_currDist} to distance between loop-entity and loop-value-1
			if {_currDist} is less than {@min_radius}:
				set {_currSmallestDist} to {_currDist}
				exit 1 loop
		if {_currSmallestDist} is less than {@min_radius}:
			broadcast "distance: %{_currSmallestDist}% - too close"
		else:
			loop {rpg::spawners::%loop-index%::mobCount} times:
				spawnentity({rpg::spawners::%loop-index%::mobId}, loop-value-1)
			broadcast "distance: %{_currSmallestDist}% - spawning %{rpg::spawners::%loop-index%::mobCount}% %{rpg::spawners::%loop-index%::mobId}%(s)."
